<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yedam.product.mapper.ProductMapper">

	<!-- 전체 상품 조회 -->
	<select id="getList" resultType="ProductVO">
	  <![CDATA[
	    SELECT *
	    FROM (
	      SELECT ROWNUM rnum, p.*
	      FROM (
	        SELECT *
	        FROM product
	        ORDER BY pro_id
	      ) p
	      WHERE ROWNUM <= #{endNum}
	    )
	    WHERE rnum >= #{startNum}
	  ]]>
	</select>
	
	<select id="selectManageReviewListPage" resultType="ProductVO">
		<![CDATA[
	    SELECT *
	    FROM (
	      SELECT ROWNUM rnum, p.*
	      FROM (
	        SELECT *
	        FROM review
	        ORDER BY rev_date desc
	      ) p
	      WHERE ROWNUM <= #{endNum}
	    )
	    WHERE rnum >= #{startNum}
	  ]]>
	</select>
	
	
	
	
	<!-- mainpage용 select -->
	<select id="selectProductCount" resultType="int">
	  SELECT COUNT(*) FROM product
	</select>
	
	<select id="getListMain" resultType="ProductVO">
	  SELECT * FROM product
	</select>
	
	
	
	<!-- 검색 결과 조회 -->
	<select id="searchResult" resultType="ProductVO">
		SELECT *
		FROM product
		WHERE
		pro_name like '%' || #{keyword } || '%'
		OR pro_category like '%' ||
		#{keyword } || '%'
	</select>
	<!-- 메뉴 조회 -->
	<select id="menuResult" resultType="ProductVO">
		SELECT *
		FROM product
		WHERE
		pro_category like '%' || #{menu } || '%'
	</select>
	<!-- 상품 상세 조회 -->
	<select id="getProduct" resultType="ProductVO">
		SELECT * FROM product WHERE
		pro_id=#{proId}
	</select>
	<!-- 카트 담기 -->
	<insert id="insertProductCart" parameterType="ProductVO">
		<selectKey keyProperty="cartId" resultType="int"
			order="BEFORE">
			SELECT seq_cart_id.NEXTVAL FROM dual
		</selectKey>
		INSERT INTO cart(cart_id, mem_id, pro_id, ca_quant, ca_sumprice)
		VALUES(#{cartId},#{memId}, #{proId}, #{caQuant}, #{caSumprice})
	</insert>

	<!-- 찜 하기 -->
	<insert id="addZzimList" parameterType="ZzimVO">
		<selectKey keyProperty="zzimId" resultType="int"
			order="BEFORE">
			SELECT seq_zzim_id.NEXTVAL FROM dual
		</selectKey>

		INSERT INTO zzim (zzim_id, mem_id, pro_id)
		VALUES (#{zzimId}, #{memId},
		#{proId})
	</insert>
	<!-- 카트 목록 조회 -->
	<select id="selectCartList" resultType="ProductVO">
		SELECT c.pro_id,
		pro_name, pro_price, pro_img, c.mem_id, ca_sumprice, ca_quant, cart_Id
		FROM product p, cart c
		WHERE p.pro_id = c.pro_id
		AND c.mem_id = #{logId}
	</select>


	<delete id="deleteProduct" parameterType="int">
		DELETE FROM product
		WHERE pro_id = #{proId}
	</delete>

	<update id="updateProduct" parameterType="ProductVO">
		update product
		<set>
			<if test="proId != null">
				pro_id = #{proId},
			</if>
			<if test="proName != null">
				pro_name = #{proName},
			</if>
			<if test="proPrice != null">
				pro_price = #{proPrice},
			</if>
			<if test="proDesc != null">
				pro_desc = #{proDesc},
			</if>
			<if test="proCategory != null">
				pro_category = #{proCategory},
			</if>
			<if test="proImg != ''">
				pro_img = #{proImg}
			</if>
		</set>
		where

		pro_id = #{proId}
	</update>

	<insert id="insertProduct" parameterType="ProductVO">
		INSERT INTO product
		(pro_id, pro_name, pro_price, pro_desc, pro_img, pro_category)
		VALUES
		(seq_pro_id.NEXTVAL, #{proName}, #{proPrice}, #{proDesc}, #{proImg},
		#{proCategory})
	</insert>

	<delete id="deleteCart" parameterType="int">
		DELETE FROM cart
		WHERE
		cart_id = #{cartId}
	</delete>

	<select id="getReviewList" resultType="ProductVO">
		SELECT *
		FROM review
		WHERE
		pro_id=#{proId}
		ORDER BY rev_id
	</select>

	<select id="getManageReviewList" resultType="ProductVO">
		SELECT *
		FROM review
		ORDER BY rev_id
	</select>

	<delete id="deleteReview" parameterType="int">
		DELETE FROM review
		WHERE
		rev_id = #{revId}
	</delete>

	<update id="updateReview" parameterType="ProductVO">
		UPDATE review
		<set>
			<if test="revReply != null">
				rev_reply = #{revReply},
			</if>
		</set>
		WHERE rev_id = #{revId}
	</update>
	
	<select id="searchReviewList" resultType="ProductVO">
		SELECT *
		FROM review
		<where>
			<if test="memId != null and proId != null">
				mem_id LIKE '%' || #{memId} || '%' AND pro_id=#{proId, jdbcType=INTEGER}
			</if>
			<if test="memId != null and proId == null">
				mem_id LIKE '%' || #{memId} || '%'
			</if>
			<if test="memId == null and proId != null">
				pro_id=#{proId, jdbcType=INTEGER}
			</if>
		</where>
	</select>

	<select id="searchReviewDateList" resultType="ProductVO">
		SELECT *
		FROM review
		<where>
			<if test="date == '오늘'">
				to_char(sysdate,'yyyy-mm-dd') = to_char(rev_date,
				'yyyy-mm-dd')
			</if>
			<if test="date == '일주일'">
				to_char(sysdate-7,'yyyy-mm-dd') <![CDATA[<=]]>
				to_char(rev_date, 'yyyy-mm-dd')
			</if>
			<if test="date == '1개월'">
				to_char(add_months(sysdate,-1),'yyyy-mm-dd') <![CDATA[<=]]>
				to_char(rev_date, 'yyyy-mm-dd')
			</if>
			<if test="date == '6개월'">
				to_char(add_months(sysdate,-6),'yyyy-mm-dd') <![CDATA[<=]]>
				to_char(rev_date, 'yyyy-mm-dd')
			</if>
		</where>
	</select>
<!-- pro_id로 찾기 -->
	<select id="searchProIdList" resultType="ProductVO">
	  <![CDATA[
	    SELECT *
	    FROM (
	      SELECT ROWNUM rnum, p.*
	      FROM (
	        SELECT *
	        FROM product
	        WHERE pro_id = #{proId}  
	        ORDER BY pro_id
	      ) p
	      WHERE ROWNUM <= #{endNum}
	    )
	    WHERE rnum >= #{startNum}
	  ]]>
	</select>

<!-- pro_Name로 찾기 -->
	<select id="selectProNameList" resultType="ProductVO">
	  <![CDATA[
	    SELECT *
	    FROM (
	      SELECT ROWNUM rnum, p.*
	      FROM (
	        SELECT *
	        FROM product
	        WHERE pro_name LIKE '%' || #{proName} || '%'  
	        ORDER BY pro_id
	      ) p
	      WHERE ROWNUM <= #{endNum}
	    )
	    WHERE rnum >= #{startNum}
	  ]]>
	</select>



	<select id="rateList" resultType="ProductVO">
		SELECT AVG(rev_rate) AS avg_rate, pro_id
		FROM review
		GROUP BY pro_id
		ORDER BY pro_id
	</select>
	
	<insert id="insertReview" parameterType="ProductVO">
		INSERT INTO review (rev_id, mem_id, pro_id, rev_title, rev_content, rev_date, rev_rate, rev_image)
		VALUES (seq_rev_id.NEXTVAL, #{memId}, #{proId}, #{revTitle}, #{revContent}, sysdate, #{revRate}, #{revImage})
	</insert>

</mapper>